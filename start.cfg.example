[gcode_macro TEST_MACRO]
description: execute a macro only if exists
gcode: 
    {% if printer['gcode_macro MACRO_NAME'] is defined %}
      MACRO_NAME
      M118 MACRO_NAME macro exists
    {% else %}
    
    {% endif %}

#  ██████╗ ██████╗ ██╗███╗   ██╗████████╗███████╗██████╗ 
#  ██╔══██╗██╔══██╗██║████╗  ██║╚══██╔══╝██╔════╝██╔══██╗
#  ██████╔╝██████╔╝██║██╔██╗ ██║   ██║   █████╗  ██████╔╝
#  ██╔═══╝ ██╔══██╗██║██║╚██╗██║   ██║   ██╔══╝  ██╔══██╗
#  ██║     ██║  ██║██║██║ ╚████║   ██║   ███████╗██║  ██║
#  ╚═╝     ╚═╝  ╚═╝╚═╝╚═╝  ╚═══╝   ╚═╝   ╚══════╝╚═╝  ╚═╝
# 

[delayed_gcode _START_PRINTER]
# description: The macros when start the printer
initial_duration: 2.0
gcode: 
    {% if printer.save_variables.variables.z_timeout %}
    M118 Timeout in pending...
    TIMER_ON
    {% endif %}

    WEBCAM_ON
    BACKUP_MOVE
    LOGS_KLIPPER_CLEAN
    LOG_CPU_CLEAN

    {% if printer['gcode_macro BRUSH_CLEAN_OFF'] is defined %}
      BRUSH_CLEAN_OFF
    {% endif %}

    ## Stop services
    # KLIPPERSCREEN_STOP
    # OCTOEVERYWHERE_STOP
    # OBICO_STOP

    
    {% if printer.bed_mesh.profiles.default %}
      BED_MESH_PROFILE LOAD=default
    {% else %}
      M118 Bed Mesh "default" not present
    {% endif %}
    
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL=6000
    SET_VELOCITY_LIMIT ACCEL=12000
    SET_VELOCITY_LIMIT VELOCITY=300

    # Test BL_Touch servo
    {% if printer['gcode_macro BL_TEST'] is defined %}
      BL_TEST
    {% endif %}

    # STRIPS
    SET_PIN PIN=LED_Strip VALUE=5 # Set Led Strip 5%

    {% if printer['gcode_macro TIMER_ON'] is defined %}
      TIMER_ON # Enable Timeout
    {% endif %}

    # Set the bed temperature as the temp measured at boot
    {% if printer['gcode_macro SET_BED_TEMP_TO_SENSOR '] is defined %}
      # SET_BED_TEMP_TO_SENSOR 
    {% endif %}

#  ███████╗████████╗ █████╗ ██████╗ ████████╗
#  ██╔════╝╚══██╔══╝██╔══██╗██╔══██╗╚══██╔══╝
#  ███████╗   ██║   ███████║██████╔╝   ██║   
#  ╚════██║   ██║   ██╔══██║██╔══██╗   ██║   
#  ███████║   ██║   ██║  ██║██║  ██║   ██║   
#  ╚══════╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝   
# 

[gcode_macro START_PRINT]  # Recall as "FIRST" START PRINT MACRO in the Slicer
description: The macros when start a print
gcode:
    {% set macro = printer['gcode_macro _MACRO_VARIABLE']|default({}) %}
    CLEAR_PAUSE
    # EXHAUST_FAN_OFF
    SAVE_VARIABLE VARIABLE=z_timeout VALUE=False
    TIMER_OFF
    SAVE_VARIABLE VARIABLE=power_resume_z VALUE=0

    FILAMENT_SENSORS_DISABLE  # Disable Filament Sensor and Encoder for purge line  

    LOG_CPU_CLEAN
    LOGS_KLIPPER_CLEAN
    RUN_SHELL_COMMAND CMD=LOG_CPU_START
    SAVE_LAST_FILE   # Recall as last MACRO in slicer: needed to generate PLR gcode without purge column in the Start Gcode of slicer
    
    DISABLE_EXTRUDER
    HOMING_IF_NOT
    #######
    # PRECISE_HOMING
    # G1 Z20 F5000
    
    # ORCA SLICER
    {% set BED_TEMP = params.BED_TEMP|default(70)|int %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(225)|int %}
    
    # Heat nozzle for probing
    M104 S{EXTRUDER_TEMP}
    # Heat bed for probing
    M140 S{BED_TEMP}

    # IDM need Bed heater off if it is AC >500w
    M140 S0
    M190 S0
    Z_TILT_ADJUST    
    MESH_PRINT  # KAMP MESH  
    
    # PARK FOR HEATING
    _TOOLHEAD_PARK_PAUSE_CANCEL
    SET_FAN_SPEED FAN=fan0 SPEED=1 # to detach the petg from the nozzle
    # G1 X0 Y0 Z5 F{macro.speed_move*60}
    Z_SAFE Z=50  # Height "brush in your hand"

    # Restore Temps after IDM Mesh
    # Heat nozzle for probing
    M104 S{EXTRUDER_TEMP}
    # Heat bed for probing
    M140 S{BED_TEMP}

    # Heat nozzle for probing
    M109 S{EXTRUDER_TEMP}
    # Heat bed for probing
    M190 S{BED_TEMP}

    {% if printer.save_variables.variables.z_filament_out %}
      LINE_PURGE # KAMP PURGE
    {% else %}
      # LINE_PURGE PURGE_AMOUNT=10 # PURGE_HEIGHT=0.8 TIP_DISTANCE=10 PURGE_MARGIN=5 
    {% endif %}
      # PURGE_LOAD_FILAMENT
      # PURGE_LINE

    SAVE_VARIABLE VARIABLE=z_filament_out VALUE=False # filament inside Hotend

    SET_FAN_SPEED FAN=fan0 SPEED=0

    LAST_START_PRINT ; Enable PLR, Encoder etc

[gcode_macro LAST_START_PRINT] # Recall as the "LAST" START PRINT MACRO in the Slicer
description: The last macros when start a print
gcode:
    {% set macro = printer['gcode_macro _MACRO_VARIABLE']|default({}) %}

    FILAMENT_SENSORS_RESTORE # RESTORE FILAMENT SWITCH ENCODER AFTER PURGE

#  ██████╗ ██╗   ██╗██████╗  ██████╗ ███████╗
#  ██╔══██╗██║   ██║██╔══██╗██╔════╝ ██╔════╝
#  ██████╔╝██║   ██║██████╔╝██║  ███╗█████╗  
#  ██╔═══╝ ██║   ██║██╔══██╗██║   ██║██╔══╝  
#  ██║     ╚██████╔╝██║  ██║╚██████╔╝███████╗
#  ╚═╝      ╚═════╝ ╚═╝  ╚═╝ ╚═════╝ ╚══════╝
#      

[gcode_macro PURGE_LOAD_FILAMENT]
gcode:
    {% set macro = printer['gcode_macro _MACRO_VARIABLE']|default({}) %}
    M118 Purging...
    M117 Purging...    
    # LOAD FILAMENT
    G90
    G92 E0 
    G1 X{macro.purge_park_x} Y{macro.purge_park_x}
    G1 E{macro.start_purge_long_lenght} F{macro.start_purge_long_speed*60}
    G92 E0
    G4 P4000
    G1 E{macro.start_purge_short_lenght} F{macro.start_purge_short_speed*60}
    G92 E0
    G11
    G11
    G1 E-3 F{macro.start_purge_long_speed*60}
    G92 E0

[gcode_macro PURGE_LINE]
gcode:
    {% set macro = printer['gcode_macro _MACRO_VARIABLE']|default({}) %}
    M118 Purging...
    M117 Purging...

    # PURGE LINE
    G1 Z1 F5000
    SET_VELOCITY_LIMIT ACCEL=500 ACCEL_TO_DECEL=250
    G90
    G1 Z1
    G92 E0 
    M83
    G1 X0 Y0 F12000
    G1 Z.32
    G1 F2400
    G1 X275 Y0 E15
    G92 E0
    G1 Z.64
    G1 X1 Y0 E12 F12000
    G1 Z0
    G92 E0 
    G11
    G1 Z3 F3000
    G92 E0 

#  ███╗   ███╗███████╗███████╗██╗  ██╗
#  ████╗ ████║██╔════╝██╔════╝██║  ██║
#  ██╔████╔██║█████╗  ███████╗███████║
#  ██║╚██╔╝██║██╔══╝  ╚════██║██╔══██║
#  ██║ ╚═╝ ██║███████╗███████║██║  ██║
#  ╚═╝     ╚═╝╚══════╝╚══════╝╚═╝  ╚═╝
# 

[gcode_macro MESH_PRINT]
gcode:
    # Adaptive Mesh if profile not loaded   
    {% if not printer.bed_mesh.profile_name %}
      M118 Bed Mesh not present
      BED_MESH_CALIBRATE PROFILE="kamp"
    {% else %}
      M118 Bed Mesh profile is: {printer.bed_mesh.profile_name}
    {% endif %}


#  ███████╗███╗   ██╗██████╗ 
#  ██╔════╝████╗  ██║██╔══██╗
#  █████╗  ██╔██╗ ██║██║  ██║
#  ██╔══╝  ██║╚██╗██║██║  ██║
#  ███████╗██║ ╚████║██████╔╝
#  ╚══════╝╚═╝  ╚═══╝╚═════╝ 
#        

[gcode_macro END_PRINT]  # Recall as END PRINT MACRO in the Slicer
description: The macros when end a print
gcode:
    {% set macro = printer['gcode_macro _MACRO_VARIABLE']|default({}) %}
    {% set x_min = printer.toolhead.axis_minimum.x %}
    {% set y_min = printer.toolhead.axis_minimum.y %}
    {% set x_med = printer.toolhead.axis_maximum.x / 2 %}
    {% set y_med = printer.toolhead.axis_maximum.y / 2 %}
    {% set x_max = printer.toolhead.axis_maximum.x %}
    {% set y_max = printer.toolhead.axis_maximum.y %}
    G0 X{x_max} Y{y_max} F18000 # Avoid last blob


    
    M118 Z SAFE
    Z_SAFE ; Raise Z more
    _TOOLHEAD_PARK_PAUSE_CANCEL
    
    # Short Retract
    M118 Short retract
    G91 ; Relative positioning
    # Retract short
    G1 E-{macro.start_purge_short_lenght} F{macro.start_purge_short_speed*60}
    DISABLE_EXTRUDER
    # G10 ; Firmware Retraction
    G92 E0
    
    

    ## Go to center
    M118 Go to center
    G90
    G1 X{x_med} Y{y_med} F{macro.speed_move*6}
    # G1 X{macro.cooling_park_x} Y{macro.cooling_park_x} F{macro.speed_move}

    ##  Steppers OFF
    M118 Steppers OFF
    M18 ; Klipper disables All Motors 
    M84 ; Klipper disables All Motors
  
    # Cooldown 20%
    # M118 Cooling at center
    # M106 S26 ; Fan 10%
    
    G4 P1000  ; pause between retractions 

    M118 Long retract
    # Retract long 
    G1 E-{macro.start_purge_long_lenght} F{macro.start_purge_long_speed*60}

    # FILAMENT OUT
    SAVE_VARIABLE VARIABLE=z_filament_out VALUE=True  # Filament out of hotend
    DISABLE_EXTRUDER

    # Cooldown
    M118 Turn Off Heaters
    TURN_OFF_HEATERS
    M106 S51 ; Fan 20%
    
    # Z_SAFE Z=100    # Avoid for warping
    
    
    M106 S102 ; Fan 40%


    ## TIMELAPSE
    TIMELAPSE_CLEAN
    G4 P5000
    TIMELAPSE_RENDER  ; Webcam
    G4 P10000  ; pause cooldown 
    M107 ; Turn-off fan
    
    # SET_FAN_SPEED FAN=RSCS SPEED=0
    # end_tune ; Beeper


    # Remove Mesh "print"
    # BED_MESH_PROFILE REMOVE="print"
    
    clear_last_file   # PLR
    
    # STOP SERVICES
    RUN_SHELL_COMMAND CMD=LOG_CPU_STOP
    # WEBCAM_OFF
    
 

    # M118 Clean Air
    # EXHAUST_FAN_ON
    # EXHAUST_FAN_ON EXHAUST_TIME=120
    
    M118 Printing finished
    TIMER_ON
    SAVE_VARIABLE VARIABLE=z_timeout VALUE=True  # Timeout persists after SAVE PENDING (FIRMWARE RESTART)

    SAVE_PENDING

# https://github.com/The--Captain/plr-klipper
# https://github.com/Travis90x/TwoTrees-Sapphire-Plus-SP5/blob/default/Klipper-Firmware/plr.cfg

# In the Slicer
# in the first row of start gcode or before purging column add: SAVE_LAST_FILE
# in the first row of end gcode add: CLEAR_LAST_FILE

# at every layer add gcode macro: LOG_Z
# in Cura Add Post processing script "Insert at layer Change" and insert "After", G-code: LOG_Z

# copy plr.sh in /home/pi/printer_data/config/config/scripts/power-loss-recovery/plr.sh
# in putty: chmod +x /home/pi/printer_data/config/config/scripts/power-loss-recovery/plr.sh
# in Kiauh install Gcode Shell Command

# In printer.cfg or here you need:
# [save_variables]
# filename: ~/printer_data/config/save_variables.cfg # needed for Power Loss Recovery plr.cfg

# AAA: please avoid "%" in filename.gcode

#[Variables]
#last_file = 'TOP'
#power_resume_z = 14.85
#was_interrupted = True

# Enable Set Kinematic Position (fake homing)
[force_move]
enable_force_move: True
 
[respond]
default_type: echo


# SAVE_LAST_FILE must be after homing, it's preferred to be before purge column in START_PRINT or in Slicer Start Gcode 
[gcode_macro SAVE_LAST_FILE]
gcode:
    M117 Avoid "%" in filename.gcode
    M118 Avoid "%" in filename.gcode
    {% set svv=printer.save_variables.variables %}
    {% set filepath=printer.virtual_sdcard.file_path %}
    M118 filepath {filepath}
    {% if filepath and filepath.strip() != "" %}
    {% set filename=filepath.split('/') %}
      # M118 all path {filename}
      # M118 filename { filename[-1] }
      SAVE_VARIABLE VARIABLE=last_file VALUE='"{ filename[-1] }"'
      SAVE_VARIABLE VARIABLE=was_interrupted VALUE=True
      SAVE_VARIABLE VARIABLE=print_temp VALUE={printer.extruder.target}
      M118 Last File: { filename[-1] }
      M117 Last File: { filename[-1] }
      {% set thumbs=filename[-1] %}
      {% set thumbnail=thumbs|replace('.gcode', '') %}     
      SAVE_VARIABLE VARIABLE=thumbnail VALUE='"{ thumbnail }"'
      G4 P2000
    {% else %}
        M118 Error: Invalid filepath
        M117 Error: Invalid filepath
    {% endif %}

[gcode_macro CLEAR_LAST_FILE]
gcode:
  {% set filename='' %}
  SAVE_VARIABLE VARIABLE=last_file VALUE='"{ filename }"'
  SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False

[gcode_macro LOG_Z]
gcode:
    {% set z_pos = printer.gcode_move.gcode_position.z %}
    RESPOND MSG="Current Z is {z_pos}"
    SAVE_VARIABLE VARIABLE=power_resume_z VALUE={z_pos}
    SAVE_VARIABLE VARIABLE=print_temp VALUE={printer.extruder.target}

# Only compatible with a LCD display connected to MCU (not klipperscreen)
# [menu __main __sdcard __resumefailed]
# type: command
# enable: {('virtual_sdcard' in printer) and printer.virtual_sdcard.file_path and printer.save_variables.variables.was_interrupted and not printer.virtual_sdcard.is_active}
# name: Resume failed
# gcode: RESUME_INTERRUPTED 

# For Main MENU in printer.cfg or here you need for example:
# [display]  # needed for Power Loss Recovery plr.cfg
# lcd_type: uc1701
# cs_pin: PD13
# a0_pin: PC6

[gcode_macro RESUME_INTERRUPTED_G28_Z]
gcode:
    {% set z_height = params.Z_HEIGHT|default(printer.save_variables.variables.power_resume_z)|float %} # prende il valore di Z dal file save_variable.cfg stringa power_resume_z
    {% set last_file = params.GCODE_FILE|default(printer.save_variables.variables.last_file)|string %} # prende nome file.gcode dal file save_variable.cfg stringa last_file
    {% set print_temp = params.PRINT_TEMP|default(printer.save_variables.variables.print_temp)|float %} # prende la temp di stampa dal file save_variable.cfg stringaprint_temp
    {% set thumbnail = params.THUMBNAIL|default(printer.save_variables.variables.thumbnail)|string %} # prende la temp di stampa dal file save_variable.cfg stringaprint_temp
    RUN_SHELL_COMMAND CMD=POWER_LOSS_RESUME_Z PARAMS="{z_height} '{last_file}' {print_temp} '{thumbnail}'" # invia come variabili ${1} ${2} ${3} ${4}

[gcode_macro RESUME_INTERRUPTED]
gcode:
    {% set z_height = params.Z_HEIGHT|default(printer.save_variables.variables.power_resume_z)|float %} # prende il valore di Z dal file save_variable.cfg stringa power_resume_z
    {% set last_file = params.GCODE_FILE|default(printer.save_variables.variables.last_file)|string %} # prende nome file.gcode dal file save_variable.cfg stringa last_file
    {% set print_temp = params.PRINT_TEMP|default(printer.save_variables.variables.print_temp)|float %} # prende la temp di stampa dal file save_variable.cfg stringaprint_temp
    {% set thumbnail = params.THUMBNAIL|default(printer.save_variables.variables.thumbnail)|string %} # prende la temp di stampa dal file save_variable.cfg stringaprint_temp
    RUN_SHELL_COMMAND CMD=POWER_LOSS_RESUME PARAMS="{z_height} '{last_file}' {print_temp} '{thumbnail}'" # invia come variabili ${1} ${2} ${3} ${4}
    
[gcode_shell_command POWER_LOSS_RESUME]
command: bash plr
timeout: 5.
#    verbose: True

[gcode_shell_command POWER_LOSS_RESUME_Z] # with homing Z if endstop are on the bottom
command: bash plr_z
timeout: 5.
#    verbose: True

[gcode_macro RESUME_INTERRUPTED_AND_PRINT]
gcode:
    {% set z_height = params.Z_HEIGHT|default(printer.save_variables.variables.power_resume_z)|float %} # prende il valore di Z dal file save_variable.cfg stringa power_resume_z
    {% set last_file = params.GCODE_FILE|default(printer.save_variables.variables.last_file)|string %} # prende nome file.gcode dal file save_variable.cfg stringa last_file
    {% set print_temp = params.PRINT_TEMP|default(printer.save_variables.variables.print_temp)|float %} # prende la temp di stampa dal file save_variable.cfg stringaprint_temp
    {% set thumbnail = params.THUMBNAIL|default(printer.save_variables.variables.thumbnail)|float %} # prende la temp di stampa dal file save_variable.cfg stringaprint_temp
    RUN_SHELL_COMMAND CMD=POWER_LOSS_RESUME PARAMS="{z_height} '{last_file}' {print_temp} '{thumbnail}'" # invia come variabili ${1} ${2} ${3} ${4}
    SDCARD_PRINT_FILE FILENAME=plr.gcode

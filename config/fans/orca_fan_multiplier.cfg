#  https://github.com/SoftFever/OrcaSlicer/wiki/Auxiliary-fan

# Instead of using [fan], we define the default part cooling fan with [fan_generic] here
# this is the default part cooling fan (Fanducts - CPAP)
#  [fan_generic fan0]
#  pin: PA7

# this is the auxiliary fan (RSCS)
# comment out it if you don't have auxiliary fan
# [fan_generic fan2]
# pin: PA8

# this is the exhaust fan (Hepa Filter)
# comment out it if you don't have exhaust fan
# [fan_generic fan3]
# pin: PA9


[gcode_macro M106]
gcode:
    {% set fan = 'fan' + (params.P|int if params.P is defined else 0)|string %}
    {% set speed = (params.S|float / 255 if params.S is defined else 1.0) %}
    {% set multiplier_values = printer['gcode_macro FAN_MULT'] %}
    {% set multiplier_fan_name = 'multiplier_fan' + (params.P|int if params.P is defined else 0)|string %}
    {% set new_speed = speed * multiplier_values[multiplier_fan_name] %}

    {% set fan_section = 'fan_generic ' + fan %}
    {% if fan_section in printer.configfile.config %}
    # {% if printer.configfile.config['fan_generic {fan}'] is defined %}

      SET_FAN_SPEED FAN={fan} SPEED={new_speed}
    {% else %}  
      M118 {fan} not defined
    {% endif %}  
    
    # M118 { multiplier_fan_name } is { multiplier_values[multiplier_fan_name] }
    # M118 Speed of {(speed * 100)|int}% will be {(new_speed * 100)|int}%

    

# Macro - FAN_MULT P0 M0.5
# will modify nexts "M106 P0 Sxxx" with xxx at 50% 
# FAN_MULT (with no params) is "FAN_MULT P0 M1" with xxx at 100%
# FAN_MULT_CLEAR - reset all multipliers at 100%
# FAN_MULT_DEBUG - show all moltipliers

[gcode_macro FAN_MULT] 
variable_multiplier_fan0: 1
variable_multiplier_fan1: 1
variable_multiplier_fan2: 1
variable_multiplier_fan3: 1
variable_multiplier_fan4: 1
variable_multiplier_fan5: 1
variable_multiplier_fan6: 1
variable_multiplier_fan7: 1
variable_multiplier_fan8: 1
variable_multiplier_fan9: 1
gcode:
    {% set multiplier_fan = 'multiplier_fan' + (params.P|int if params.P is defined else 0)|string %}
	{% set multiplier_value = (params.M|float if params.M is defined else 1)|float %}
	
    SET_GCODE_VARIABLE MACRO=FAN_MULT VARIABLE={multiplier_fan} VALUE={multiplier_value} #
    M118 set {multiplier_fan} at {(multiplier_value *100)|int}%
	

[gcode_macro FAN_MULT_DEBUG]
gcode:
    {% set multiplier_values = printer['gcode_macro FAN_MULT'] %}

    {% for i in range(10) %}  # Modifica il range se hai pi√π di 10 ventole
        {% set fan_section = 'fan_generic fan' + i|string %}
        {% if fan_section in printer.configfile.config %}
            {% set multiplier_fan_name = 'multiplier_fan' + i|string %}
            M118 Multiplier fan{ i } = { multiplier_values[multiplier_fan_name] }
        {% endif %}
    {% endfor %}

[gcode_macro FAN_MULT_DEBUGS] 
gcode:
    {% set multiplier_values = printer['gcode_macro FAN_MULT'] %}
    M118 Multiplier fan0 = {multiplier_values.multiplier_fan0}
    M118 Multiplier fan1 = {multiplier_values.multiplier_fan1}
    M118 Multiplier fan2 = {multiplier_values.multiplier_fan2}
    M118 Multiplier fan3 = {multiplier_values.multiplier_fan3}
    M118 Multiplier fan4 = {multiplier_values.multiplier_fan4}
    M118 Multiplier fan5 = {multiplier_values.multiplier_fan5}
    M118 Multiplier fan6 = {multiplier_values.multiplier_fan6}
    M118 Multiplier fan7 = {multiplier_values.multiplier_fan7}
    M118 Multiplier fan8 = {multiplier_values.multiplier_fan8}
    M118 Multiplier fan9 = {multiplier_values.multiplier_fan9}
    
[gcode_macro FAN_MULT_CLEAR]

gcode:
    {% for i in range(10) %}
        SET_GCODE_VARIABLE MACRO=FAN_MULT VARIABLE=multiplier_fan{i} VALUE=1
    {% endfor %}


[delayed_gcode FAN_MULT_CLEARS]
initial_duration: 1
gcode:
    # To reset: #   UPDATE_DELAYED_GCODE ID=clear_multiplier_fan DURATION=1 
    FAN_MULT_CLEARS
